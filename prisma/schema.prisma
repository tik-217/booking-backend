// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id             Int             @id @default(autoincrement())
  name           String
  stars          Int
  type           String
  description    String
  additionalInfo String?
  photo          String[]
  country        String
  city           String?
  address        String
  legalAddress   String
  policy         String[]
  rooms          Rooms[]
  hotelServices  HotelServices[]

  reviewHotels ReviewHotels[]
}

// HotelServices //

model HotelServices {
  id Int @id @default(autoincrement())

  Hotel   Hotel? @relation(fields: [hotelId], references: [id])
  hotelId Int?

  hotelServicesAnimals              HotelServicesAnimals[]
  hotelServicesBeautyAndHealth      HotelServicesBeautyAndHealth[]
  hotelServicesBusiness             HotelServicesBusiness[]
  hotelServicesChildren             HotelServicesChildren[]
  hotelServicesEntertainment        HotelServicesEntertainment[]
  hotelServicesGeneral              HotelServicesGeneral[]
  hotelServicesInTheRooms           HotelServicesInTheRooms[]
  hotelServicesInternet             HotelServicesInternet[]
  hotelServicesMeals                HotelServicesMeals[]
  hotelServicesParking              HotelServicesParking[]
  hotelServicesSanitaryMeasures     HotelServicesSanitaryMeasures[]
  hotelServicesServicesAndAmenities HotelServicesServicesAndAmenities[]
  hotelServicesSports               HotelServicesSports[]
  hotelServicesStaffSpeaks          HotelServicesStaffSpeaks[]
  hotelServicesTransfer             HotelServicesTransfer[]
}

model HotelServicesAnimals {
  id                                    Int     @id @default(autoincrement())
  accommodationWithPetsIsPaidSeparately String
  image                                 String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesBeautyAndHealth {
  id                          Int     @id @default(autoincrement())
  firstAidKit                 String
  massageIsPaidSeparately     String
  beautySalonIsPaidSeparately String
  image                       String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesBusiness {
  id                                Int     @id @default(autoincrement())
  conferenceHall                    String
  xerox                             String
  organizationOfMeetingsAndBanquets String
  videoRentalAndComputerEquipment   String
  image                             String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesChildren {
  id                                         Int     @id @default(autoincrement())
  childrensTvChannels                        String
  accommodationIsSuitableForFamiliesChildren String
  babysittingAndChildCare                    String
  image                                      String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesEntertainment {
  id                       Int     @id @default(autoincrement())
  suitableForFestiveEvents String
  image                    String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesGeneral {
  id                           Int            @id @default(autoincrement())
  designHotel                  String
  individualCheckInAndCheckOut String
  computer                     String
  airConditioning              String
  fullDayHourFrontDesk         String
  elevator                     String
  fireExtinguisher             String
  nonSmokingHotel              String
  heating                      String
  lateCheckOut                 String
  dishwasherCar                String
  earlyCheckIn                 String
  washingMachine               String
  expeditedCheckInAndCheckOut  String
  image                        String
  HotelServices                HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId              Int?
}

model HotelServicesInTheRooms {
  id                       Int     @id @default(autoincrement())
  vipAmenitiesInTheRoom    String
  cableTv                  String
  bridalSuite              String
  musicCenter              String
  roomsForAllergySufferers String
  smokingRooms             String
  nonSmokingRooms          String
  roomService              String
  safeInTheRoom            String
  familyRooms              String
  tv                       String
  refrigerator             String
  image                    String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesInternet {
  id       Int     @id @default(autoincrement())
  freeWiFi String
  image    String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesMeals {
  id                  Int     @id @default(autoincrement())
  freeTeaOrCoffee     String
  fullBoardIsPossible String
  halfBoardIsPossible String
  breakfastInTheRoom  String
  kitchen             String
  microwave           String
  restaurant          String
  image               String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesParking {
  id                      Int     @id @default(autoincrement())
  parkingIsPaidSeparately String
  image                   String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesSanitaryMeasures {
  id                                   Int     @id @default(autoincrement())
  personalProtectiveEquipmentForGuests String
  personalProtectiveEquipmentForStaff  String
  temperatureControlForGuests          String
  temperatureControlForStaff           String
  enhancedDisinfectionMeasures         String
  image                                String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesServicesAndAmenities {
  id                               Int     @id @default(autoincrement())
  ironingFacilities                String
  ironingServicesArePaidSeparately String
  laundryIsPaidSeparately          String
  telephone                        String
  conciergeServices                String
  iron                             String
  hairDryerOnRequest               String
  dryCleaningIsPaidSeparately      String
  luggageStorage                   String
  image                            String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesSports {
  id    Int     @id @default(autoincrement())
  gym   String
  image String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesStaffSpeaks {
  id        Int     @id @default(autoincrement())
  inEnglish String
  inRussian String
  image     String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

model HotelServicesTransfer {
  id       Int     @id @default(autoincrement())
  transfer String
  image    String

  HotelServices   HotelServices? @relation(fields: [hotelServicesId], references: [id])
  hotelServicesId Int?
}

// /// HotelServices /// //

model ReviewHotels {
  id      Int      @id @default(autoincrement())
  avatar  String
  name    String
  rating  Int
  reviews String
  date    DateTime @default(now())
  country String

  Hotel   Hotel? @relation(fields: [hotelId], references: [id])
  hotelId Int?
}

model Rooms {
  id             Int      @id @default(autoincrement())
  name           String
  cost           Int
  description    String
  photo          String[]
  numberOfGuests Int

  Hotel   Hotel? @relation(fields: [hotelId], references: [id])
  hotelId Int?

  favouritHotelsOrRooms   User?   @relation("favouritHotelsOrRoomsId", fields: [favouritHotelsOrRoomsId], references: [id])
  favouritHotelsOrRoomsId String?

  historyOfBooking   User?   @relation("historyOfBookingId", fields: [historyOfBookingId], references: [id])
  historyOfBookingId String?

  RoomServices   RoomServices? @relation(fields: [roomServicesId], references: [id])
  roomServicesId Int?

  ReviewRooms   ReviewRooms? @relation(fields: [reviewRoomsId], references: [id])
  reviewRoomsId Int?
}

model RoomServices {
  id   Int      @id @default(autoincrement())
  pool String[]
  room Rooms[]
}

model ReviewRooms {
  id      Int      @id @default(autoincrement())
  avatar  String
  name    String
  rating  Int
  reviews String
  date    DateTime @default(now())
  country String
  room    Rooms[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  surname       String?
  gender        String?
  city          String?
  email         String?   @unique
  emailVerified DateTime? @default(now())
  phone         String?
  dateOfBirth   DateTime? @default(now())
  image         String?

  favouritHotelsOrRooms Rooms[] @relation("favouritHotelsOrRoomsId")
  historyOfBooking      Rooms[] @relation("historyOfBookingId")

  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
